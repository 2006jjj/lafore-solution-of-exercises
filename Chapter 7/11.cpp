/*07_11ex.cpp
Вернемся к обсуждению денежных строк из упр. 6. Напишите метод ldtoms() для преобразования числа типа long double в денежную строку, представляющую это число.
Для начала вам нужно проверить, что значение long double не очень большое. Мы предполагаем, что вы не будете пытаться преобразовать число, больше чем 9 999 999 999 999 999.00.
Затем преобразуем long double в строку (без знака доллара и запятых), хранящуюся в памяти, используя объект ostrstream, как рассматривалось ранее в этой главе. Получившаяся отформатированная
строка может быть помещена в буфер, называющийся ustring.
Затем вам нужно будет создать другую строку, начинающуюся со знака доллара, далее копируем цифру за цифрой из строки ustring, начиная слева и вставляя запятые через каждые три цифры.
Также вам нужно подавлять нули в начале строки. Например, вы должны вывести $ 3 124.95, а не $0 000 000 000 003 124.95. Не забудьте закончить строку нулевым символом '\0'.
Напишите функцию main() для тестирования этой функции путем многократного ввода пользователем чисел типа long double и вывода результата в виде денежной строки.*/

#include <iostream>
#include <iomanip>
#include <sstream>
using namespace std;

class money 
{
private:
string s1; 
long double res = 0.0;
public:
void ldtoms(long double value) 
{
  s1 = "$" + to_string(value); 
  int index = 1;
  for (int j = s1.find(',') - 1; j >= 0; j--)
  {
    if (index % 3 == 0 && j != 1 && j != 0)
      s1.insert(j, ".");
    index++;
  } 
  display();
}
void putld() 
{
  int index = 10;
  while (index-- > 0) 
  {
    cout << "\nВведите число в формате long double(123456.789):\n";	
    cin >> res;
    if (res > 9999999999999990.00 || res < 0) 
    {
      cout << "Error! Overflow!"; 
      continue;
    }
    ldtoms(res);
  }
}
void display() const 
{
  for (int j = 0; j < s1.find(',') + 3; j++)
    cout << s1[j];
}
};

int main()
{setlocale(LC_ALL, ".1251"); system("color 0F"); srand(time(NULL));

money m2;
m2.putld();

cout << endl; system("pause"); return 0;
}
