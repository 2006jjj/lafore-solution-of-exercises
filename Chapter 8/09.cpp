/*08_09ex.cpp
Дополните класс safearray из программы ARROVER3 этой главы так, чтобы пользователь мог определять и верхнюю, и нижнюю границы массива 
(например, индексы, начинающиеся с 100 и заканчивающиеся 200). Имеем перегруженную операцию доступа к членам массива, проверяющую индексы каждый раз, когда к массиву 
нужен доступ, для проверки того, что мы не вышли за пределы массива. Вам понадобится конструктор с двумя аргументами, который определяет верхнюю и нижнюю границы.
Так как мы еще не изучили, как выделять память динамически, то данные класса все еще будут размещаться в массиве, состоящем из 100 элементов, но вообще вы можете
преобразовывать индексы массива safearray в индексы реального массива целых чисел произвольным образом. Например, если пользователь определил диапазон от 100 до 175,
то вы можете преобразовать его в диапазон от arr[0] до arr[75].*/

#include <iostream>
using namespace std;

class safearray
{
private:
  static const int SZ = 100; 
  int arr[SZ]; 
  int a, b;
public:
safearray() : arr{}, a(0), b(0) {}
void granici()
{
  cout << "Введите первую границу:"; 
  cin >> a;
  cout << "Введите вторую границу:"; 
  cin >> b;
  if (a > b || b - a > SZ)
  {
    cout << "\nError!"; 
    exit(1);
  }
  else b -= a;
}

int getlimit() 
{
  return b; 
}

int& operator [] (int n) 
{ 
  return arr[n]; 
}
};

int main()
{setlocale(LC_ALL, ".1251"); system("color 0F"); srand(time(NULL));

safearray sa1;
sa1.granici();
for (int j = 1; j <= sa1.getlimit(); j++)
  sa1[j] = j * 10;
for (int j = 1; j <= sa1.getlimit(); j++) 
{
  int temp = sa1[j];
  cout << "Элемент " << j << " равен " << temp << endl;
}
 
cout << endl; system("pause"); return 0;
}
